/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockPancakeRouter } from "../MockPancakeRouter";

export class MockPancakeRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _treasurer: string,
    _factory: string,
    overrides?: Overrides
  ): Promise<MockPancakeRouter> {
    return super.deploy(
      _treasurer,
      _factory,
      overrides || {}
    ) as Promise<MockPancakeRouter>;
  }
  getDeployTransaction(
    _treasurer: string,
    _factory: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_treasurer, _factory, overrides || {});
  }
  attach(address: string): MockPancakeRouter {
    return super.attach(address) as MockPancakeRouter;
  }
  connect(signer: Signer): MockPancakeRouter__factory {
    return super.connect(signer) as MockPancakeRouter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPancakeRouter {
    return new Contract(address, _abi, signerOrProvider) as MockPancakeRouter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasurer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516107773803806107778339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b8116608052911b1660a05260805160601c60a05160601c6106ea61008d6000398061055152508061022e52806103a2528061048952806105bc52506106ea6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338ed1739146100515780635c11d79514610051578063c45a01551461012c578063d06ca61f14610150575b600080fd5b6100dc600480360360a081101561006757600080fd5b81359160208101359181019060608101604082013564010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460208302840111640100000000831117156100c257600080fd5b91935091506001600160a01b0381351690602001356101fa565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610118578181015183820152602001610100565b505050509050019250505060405180910390f35b61013461054f565b604080516001600160a01b039092168252519081900360200190f35b6100dc6004803603604081101561016657600080fd5b8135919081019060408101602082013564010000000081111561018857600080fd5b82018360208201111561019a57600080fd5b803590602001918460208302840111640100000000831117156101bc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610573945050505050565b606060008585600019810181811061020e57fe5b905060200201356001600160a01b03166001600160a01b031663dd62ed3e7f0000000000000000000000000000000000000000000000000000000000000000306040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d60208110156102c557600080fd5b505160408051600280825260608201835292935091906020830190803683370190505091508781836000815181106102f957fe5b602002602001018460018151811061030d57fe5b6020026020010182815250828152505050868260018451038151811061032f57fe5b602002602001015110156103745760405162461bcd60e51b815260040180806020018281038252602981526020018061068c6029913960400191505060405180910390fd5b8585600081811061038157fe5b905060200201356001600160a01b03166001600160a01b03166323b872dd337f0000000000000000000000000000000000000000000000000000000000000000856000815181106103ce57fe5b60200260200101516040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801561042c57600080fd5b505af1158015610440573d6000803e3d6000fd5b505050506040513d602081101561045657600080fd5b5086905085600019810181811061046957fe5b905060200201356001600160a01b03166001600160a01b03166323b872dd7f000000000000000000000000000000000000000000000000000000000000000033856001875103815181106104b957fe5b60200260200101516040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801561051757600080fd5b505af115801561052b573d6000803e3d6000fd5b505050506040513d602081101561054157600080fd5b509198975050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080516002808252606080830184529260208301908036833701905050905082826001845103815181106105a457fe5b60200260200101516001600160a01b031663dd62ed3e7f0000000000000000000000000000000000000000000000000000000000000000306040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561062957600080fd5b505afa15801561063d573d6000803e3d6000fd5b505050506040513d602081101561065357600080fd5b50518251839060009061066257fe5b602002602001018360018151811061067657fe5b6020908102919091010191909152529291505056fe50616e63616b65526f757465723a20494e53554646494349454e545f4f55545055545f414d4f554e54a2646970667358221220f656539bec70e34b4bf000ca0286697c1cfebbd8d7cf91c8665ffd544b63acf864736f6c63430007040033";

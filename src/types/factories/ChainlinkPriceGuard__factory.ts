/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ChainlinkPriceGuard } from "../ChainlinkPriceGuard";

export class ChainlinkPriceGuard__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    feed: string,
    decimalRatio: BigNumberish,
    lowerDecimals: boolean,
    flipped: boolean,
    overrides?: Overrides
  ): Promise<ChainlinkPriceGuard> {
    return super.deploy(
      feed,
      decimalRatio,
      lowerDecimals,
      flipped,
      overrides || {}
    ) as Promise<ChainlinkPriceGuard>;
  }
  getDeployTransaction(
    feed: string,
    decimalRatio: BigNumberish,
    lowerDecimals: boolean,
    flipped: boolean,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      feed,
      decimalRatio,
      lowerDecimals,
      flipped,
      overrides || {}
    );
  }
  attach(address: string): ChainlinkPriceGuard {
    return super.attach(address) as ChainlinkPriceGuard;
  }
  connect(signer: Signer): ChainlinkPriceGuard__factory {
    return super.connect(signer) as ChainlinkPriceGuard__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkPriceGuard {
    return new Contract(address, _abi, signerOrProvider) as ChainlinkPriceGuard;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "feed",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "decimalRatio",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "lowerDecimals",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "flipped",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161064e38038061064e8339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151600080546001600160a01b039094166001600160a01b031990941693909317909255600155600280549115156101000261ff001993151560ff1990931692909217929092161790556105b18061009d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c1952171461004657806398d5fdca14610075578063c6414eee1461007d575b600080fd5b6100636004803603602081101561005c57600080fd5b50356100a0565b60408051918252519081900360200190f35b6100636100e5565b6100636004803603604081101561009357600080fd5b508035906020013561015f565b6000806100b36100ae6100e5565b6101a6565b600254909150610100900460ff166100d4576100cf83826101cc565b6100de565b6100de83826102bc565b9392505050565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b15801561012a57600080fd5b505afa15801561013e573d6000803e3d6000fd5b505050506040513d60a081101561015457600080fd5b506020015192915050565b60008061016b846100a0565b9050828110610199576101948161018e61271061018883886103be565b90610400565b90610459565b61019c565b60005b9150505b92915050565b60025460009060ff166101c45760015482816101be57fe5b046101a0565b506001540290565b60008215806101d9575081155b156101e6575060006101a0565b816706f05b59d3b2000019816101f857fe5b04831115604051806040016040528060038152602001624d4d4f60e81b815250906102a15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561026657818101518382015260200161024e565b50505050905090810190601f1680156102935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050670de0b6b3a764000091026706f05b59d3b20000010490565b60408051808201909152600381526226a22d60e91b6020820152600090826103255760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561026657818101518382015260200161024e565b506040805180820190915260038152624d4d4f60e81b60208201526002830490670de0b6b3a764000082190485111561039f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561026657818101518382015260200161024e565b508281670de0b6b3a7640000860201816103b557fe5b04949350505050565b60006100de83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061049b565b60008261040f575060006101a0565b8282028284828161041c57fe5b04146100de5760405162461bcd60e51b815260040180806020018281038252602181526020018061055b6021913960400191505060405180910390fd5b60006100de83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506104f5565b600081848411156104ed5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561026657818101518382015260200161024e565b505050900390565b600081836105445760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561026657818101518382015260200161024e565b50600083858161055057fe5b049594505050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220257569dc1321760622ba7ffbfcafd4ced14d84649789956ef15472217b3b132864736f6c63430007040033";

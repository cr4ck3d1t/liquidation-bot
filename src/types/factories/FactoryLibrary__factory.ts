/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { FactoryLibrary } from "../FactoryLibrary";

export class FactoryLibrary__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<FactoryLibrary> {
    return super.deploy(overrides || {}) as Promise<FactoryLibrary>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FactoryLibrary {
    return super.attach(address) as FactoryLibrary;
  }
  connect(signer: Signer): FactoryLibrary__factory {
    return super.connect(signer) as FactoryLibrary__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FactoryLibrary {
    return new Contract(address, _abi, signerOrProvider) as FactoryLibrary;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32ToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610211610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80639201de551461003a575b600080fd5b61004d610048366004610170565b610063565b60405161005a9190610188565b60405180910390f35b606060005b60208160ff161080156100965750828160ff166020811061008557fe5b1a60f81b6001600160f81b03191615155b156100a357600101610068565b60608160ff1667ffffffffffffffff811180156100bf57600080fd5b506040519080825280601f01601f1916602001820160405280156100ea576020820181803683370190505b509050600091505b60208260ff161080156101205750838260ff166020811061010f57fe5b1a60f81b6001600160f81b03191615155b1561016957838260ff166020811061013457fe5b1a60f81b818360ff168151811061014757fe5b60200101906001600160f81b031916908160001a9053506001909101906100f2565b9392505050565b600060208284031215610181578081fd5b5035919050565b6000602080835283518082850152825b818110156101b457858101830151858201604001528201610198565b818111156101c55783604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212201004c64ae6dc35a6e98c05f8d6a53c5aa3930a106eb84207e085823113b927b464736f6c63430007040033";
